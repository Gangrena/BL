@using BetterLife.WebUi.HtmlHelperMethods;
@using WebGrease.Css.Extensions

<link rel="stylesheet" type="text/css" href="/Content/reset.css">
<link rel="stylesheet" type="text/css" href="/Content/main.css">
<link rel="stylesheet" href="/Content/bootstrap.min.css" type="text/css" />
<script type="text/javascript" src="/Scripts/jquery.js"></script>
<script type="text/javascript" src="/Scripts/main.js"></script>
<script src="/Scripts/jquery.validate.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js"></script>
<script src="/Scripts/bootstrap.js"></script>
<script src="/Scripts/RemovePhoto.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-2.1.3.js"></script>
<script src="~/Scripts/knockout-2.2.0.js"></script>
<script src='@Url.Content("~/Scripts/knockout-2.2.0.debug.js")' type="text/javascript"></script>

<script type="text/javascript">
    function PhotoViewModel() {
        var self = this;
        self.PhotoId = ko.observable("");
        self.PhotoTitle = ko.observable("");
        self.Created = ko.observable("");
        self.DataId = ko.observable("");
        self.IsProfile = ko.observable("");
        self.DeletePhoto = ko.observable("");

        var Photo = {
            PhotoId: self.PhotoId,
            PhotoTitle: self.PhotoTitle,
            Created: self.Created,
            IsProfile: self.IsProfile,
            DeletePhoto: self.DeletePhoto,
            DataId: self.DataId,
        };

        self.Photo = ko.observable();
        self.Photos = ko.observableArray();

        $.ajax({
            url: '@Url.Action("GetAllPhotos", "Photo")',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (data) {
                self.Photos(data);
            }
        });

        //Add New Employee
        self.create = function () {
            if (Employee.FirstName() != "" && Employee.LastName() != "" && Employee.City() != "" && Employee.Region() != "" && Employee.PostalCode() != "" && Employee.Country() != "") {
                $.ajax({
                    url: '@Url.Action("CreatePhoto", "Photo")',
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON(Photo),
                    success: function (data) {
                        self.Photos.push(data);
                        self.FirstName("");
                        self.LastName("");
                        self.City("");
                        self.Region("");
                        self.PostalCode("");
                        self.Country("");

                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });

            }
            else {
                alert('Please Enter All the Values !!');
            }

        }

        // Delete employee
        self.delete = function (Photo) {
                var id = Photo.PhotoId;

                $.ajax({
                    url: '@Url.Action("Delete", "Photo")',
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON(id),
                    success: function (data) {
                        self.Photos.remove(Photo);
                        //   alert("Record Deleted Successfully");
                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
            }
        }

        // Edit employee
        self.edit = function (Photo) {
            self.Photos(Photo);

        }

        //// Update employee
        self.update = function () {
            var Photo = self.Photo();
            alert(Photo.PhotoId);

            debugger;
            $.ajax({
                url: '@Url.Action("EditPhoto", "Photo")',
                cache: false,
                type: 'PUT',
                contentType: 'application/json; charset=utf-8',
                data: ko.toJSON(Photo),
                success: function (data) {
                    alert(data);
                    self.Photos.removeAll();
                    self.Photos(data); //Put the response in ObservableArray
                    self.Photos(null);
                    alert("Record Updated Successfully");

                }
            })
                .fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
        }


        // Reset employee
        self.reset = function () {
            self.FirstName("");
            self.LastName("");
            self.City("");
            self.Region("");
            self.PostalCode("");
            self.Country("");
        }

        // Cancel employee

        self.cancel = function () {
            self.Photos(null);

        }
    

    // Binding knockout
    $(document).ready(function () {
        var viewModel = new PhotoViewModel();
        ko.applyBindings(viewModel);
    });


</script>





<script type="text/javascript">
    $('.dropdown-toggle').dropdown()
</script>


<section class="top">
    <div class="wrapper content_header clearfix">

    </div>
</section><!-- end top -->

<section class="wrapper">
    <ul class="nav nav-pills">
        <li role="presentation">@Html.ActionLink("Information", "Manage", "PersonProfile", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })</li>
        <li role="presentation" class="dropdown active">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-expanded="false">
                Photo <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" role="menu">
                <li>@Html.ActionLink("Insert New Photo", "AddPhoto", "PersonProfile", routeValues: null, htmlAttributes: new { @class = "username", title = "Location" })</li>
                <li>@Html.ActionLink("Photo List/Edit", "ListPhoto", "PersonProfile", routeValues: null, htmlAttributes: new { @class = "username", title = "Location" })</li>
            </ul>
        <li role="presentation" class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-expanded="false">
                Location <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" role="menu">
                <li>@Html.ActionLink("Insert New Location", "AddLocation", "PersonProfile", routeValues: null, htmlAttributes: new { @class = "username", title = "Location" })</li>
                <li>@Html.ActionLink("Location List/Edit", "ListLocation", "PersonProfile", routeValues: null, htmlAttributes: new { @class = "username", title = "Location" })</li>
            </ul>
        <li role="presentation"><a href="#">Favorite Movies</a></li>
        <li role="presentation"><a href="#">Favorite Books</a></li>
    </ul>
</section>

<div data-bind="Visible:Photos().length > 0">
    <div data-bind="foreach:Photos">
        <div class="work">
            <p data-bind="text:PhotoId"></p>
            <img data-bind="attr: {'src': '@Url.Action("RenderPhoto","PersonProfile")?dataid='+ DataId },text:DataId" class="media" alt="" width="466" height="466"/>
            <button data-bind="click: $root.delete">Delete</button>   
        </div>
    </div>
</div>



